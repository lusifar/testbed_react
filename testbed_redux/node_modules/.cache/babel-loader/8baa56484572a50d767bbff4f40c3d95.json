{"ast":null,"code":"var _jsxFileName = \"/Users/rickyjhc/Desktop/testbed/testbed_react/testbed_redux/src/components/Result/Result.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { resultAction } from \"../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Result = props => {\n  let result = null;\n\n  if (props.items) {\n    result = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.items.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => {\n            props.removeResultHandler(index);\n          },\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [result, props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = Result;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeResultHandler: index => {\n      dispatch(resultAction.removeResultAsync(index));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Result);\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/rickyjhc/Desktop/testbed/testbed_react/testbed_redux/src/components/Result/Result.js"],"names":["React","connect","resultAction","Result","props","result","items","map","item","index","removeResultHandler","children","mapDispatchToProps","dispatch","removeResultAsync"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,YAAT,QAA6B,qBAA7B;;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAC/B,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAID,KAAK,CAACE,KAAV,EAAiB;AACfD,IAAAA,MAAM,gBACJ;AAAA,gBACGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,4BACE;AAEE,UAAA,OAAO,EAAE,MAAM;AACbL,YAAAA,KAAK,CAACM,mBAAN,CAA0BD,KAA1B;AACD,WAJH;AAAA,oBAMGD;AANH,WACOC,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAED,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,eACGJ,MADH,EAEGD,KAAK,CAACO,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3BM;KAAMR,M;;AA6Bb,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLH,IAAAA,mBAAmB,EAAGD,KAAD,IAAW;AAC9BI,MAAAA,QAAQ,CAACX,YAAY,CAACY,iBAAb,CAA+BL,KAA/B,CAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeR,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCT,MAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { resultAction } from \"../../store/actions\";\n\nexport const Result = (props) => {\n  let result = null;\n  if (props.items) {\n    result = (\n      <ul>\n        {props.items.map((item, index) => {\n          return (\n            <li\n              key={index}\n              onClick={() => {\n                props.removeResultHandler(index);\n              }}\n            >\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {result}\n      {props.children}\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    removeResultHandler: (index) => {\n      dispatch(resultAction.removeResultAsync(index));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Result);\n"]},"metadata":{},"sourceType":"module"}