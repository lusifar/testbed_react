{"ast":null,"code":"var _jsxFileName = \"/Users/rickyjhc/Desktop/testbed/testbed_react/testbed_redux/src/components/Count/Count.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { resultAction } from \"../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Count = props => {\n  _s();\n\n  // react-redux\n  const dispatch = useDispatch();\n\n  addResultHandler = val => {\n    dispatch(resultAction.addResultAsync(val));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Current Count: \", props.number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        addResultHandler(props.number);\n      },\n      children: \"Add result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Count, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Count;\nexport default _c2 = /*#__PURE__*/React.memo(Count);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Count\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/rickyjhc/Desktop/testbed/testbed_react/testbed_redux/src/components/Count/Count.js"],"names":["React","connect","useDispatch","resultAction","Count","props","dispatch","addResultHandler","val","addResultAsync","number","children","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AAEA,SAASC,YAAT,QAA6B,qBAA7B;;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAC9B;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AAEAK,EAAAA,gBAAgB,GAAIC,GAAD,IAAS;AAC1BF,IAAAA,QAAQ,CAACH,YAAY,CAACM,cAAb,CAA4BD,GAA5B,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,oCAAoBH,KAAK,CAACK,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,OAAO,EAAE,MAAM;AACbH,QAAAA,gBAAgB,CAACF,KAAK,CAACK,MAAP,CAAhB;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EASGL,KAAK,CAACM,QATT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArBM;;GAAMP,K;UAEMF,W;;;KAFNE,K;AAuBb,kCAAeJ,KAAK,CAACY,IAAN,CAAWR,KAAX,CAAf","sourcesContent":["import React from \"react\";\n\nimport { connect, useDispatch } from \"react-redux\";\n\nimport { resultAction } from \"../../store/actions\";\n\nexport const Count = (props) => {\n  // react-redux\n  const dispatch = useDispatch();\n\n  addResultHandler = (val) => {\n    dispatch(resultAction.addResultAsync(val));\n  };\n\n  return (\n    <React.Fragment>\n      <h1>Current Count: {props.number}</h1>\n      <button\n        onClick={() => {\n          addResultHandler(props.number);\n        }}\n      >\n        Add result\n      </button>\n      {props.children}\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Count);\n"]},"metadata":{},"sourceType":"module"}