{"ast":null,"code":"import { actionType } from '../../constants';\nimport { updateObject } from '../../utilities';\nconst initState = {\n  count: 0\n};\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case actionType.INCREMNET:\n      return updateObject(state, {\n        count: state.count + 1\n      });\n\n    case actionType.DECREMENT:\n      return updateObject(state, {\n        count: state.count - 1\n      });\n\n    case actionType.ADD:\n      return updateObject(state, {\n        count: state.count + action.val\n      });\n\n    case actionType.SUBTRACT:\n      return updateObject(state, {\n        count: state.count - action.val\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/rickyjhc/Desktop/testbed/testbed_react/testbed_redux/src/store/reducers/count.js"],"names":["actionType","updateObject","initState","count","reducer","state","action","type","INCREMNET","DECREMENT","ADD","val","SUBTRACT"],"mappings":"AAAA,SAASA,UAAT,QAA2B,iBAA3B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AADS,CAAlB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,SAAT,EAAoBI,MAApB,KAA+B;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,UAAU,CAACQ,SAAhB;AACE,aAAOP,YAAY,CAACI,KAAD,EAAQ;AAAEF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,OAAR,CAAnB;;AAEF,SAAKH,UAAU,CAACS,SAAhB;AACE,aAAOR,YAAY,CAACI,KAAD,EAAQ;AAAEF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,OAAR,CAAnB;;AAEF,SAAKH,UAAU,CAACU,GAAhB;AACE,aAAOT,YAAY,CAACI,KAAD,EAAQ;AAAEF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACK;AAA9B,OAAR,CAAnB;;AAEF,SAAKX,UAAU,CAACY,QAAhB;AACE,aAAOX,YAAY,CAACI,KAAD,EAAQ;AAAEF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACK;AAA9B,OAAR,CAAnB;;AAEF;AACE,aAAON,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["import { actionType } from '../../constants';\nimport { updateObject } from '../../utilities';\n\nconst initState = {\n  count: 0,\n};\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case actionType.INCREMNET:\n      return updateObject(state, { count: state.count + 1 });\n\n    case actionType.DECREMENT:\n      return updateObject(state, { count: state.count - 1 });\n\n    case actionType.ADD:\n      return updateObject(state, { count: state.count + action.val });\n\n    case actionType.SUBTRACT:\n      return updateObject(state, { count: state.count - action.val });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}