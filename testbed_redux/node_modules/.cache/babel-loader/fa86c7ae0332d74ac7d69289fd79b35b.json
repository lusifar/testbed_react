{"ast":null,"code":"var _jsxFileName = \"/Users/rickyjhc/Desktop/testbed/testbed_react/testbed_redux/src/components/Result/Result.js\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { resultAction } from \"../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Result = props => {\n  const drawResults = () => {\n    let result = null;\n\n    if (props.items) {\n      result = /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: props.items.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              props.removeResultHandler(index);\n            },\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [result, props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = Result;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeResultHandler: index => {\n      dispatch(resultAction.removeResultAsync(index));\n    }\n  };\n};\n\nexport default _c2 = /*#__PURE__*/React.memo(Result);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Result\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/rickyjhc/Desktop/testbed/testbed_react/testbed_redux/src/components/Result/Result.js"],"names":["React","useDispatch","resultAction","Result","props","drawResults","result","items","map","item","index","removeResultHandler","children","mapDispatchToProps","dispatch","removeResultAsync","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,YAAT,QAA6B,qBAA7B;;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAC/B,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIC,MAAM,GAAG,IAAb;;AACA,QAAIF,KAAK,CAACG,KAAV,EAAiB;AACfD,MAAAA,MAAM,gBACJ;AAAA,kBACGF,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,8BACE;AAEE,YAAA,OAAO,EAAE,MAAM;AACbN,cAAAA,KAAK,CAACO,mBAAN,CAA0BD,KAA1B;AACD,aAJH;AAAA,sBAMGD;AANH,aACOC,KADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAXA;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAgBD;AACF,GApBD;;AAsBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,eACGJ,MADH,EAEGF,KAAK,CAACQ,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA7BM;KAAMT,M;;AA+Bb,MAAMU,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLH,IAAAA,mBAAmB,EAAGD,KAAD,IAAW;AAC9BI,MAAAA,QAAQ,CAACZ,YAAY,CAACa,iBAAb,CAA+BL,KAA/B,CAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,kCAAeV,KAAK,CAACgB,IAAN,CAAWb,MAAX,CAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { resultAction } from \"../../store/actions\";\n\nexport const Result = (props) => {\n  const drawResults = () => {\n    let result = null;\n    if (props.items) {\n      result = (\n        <ul>\n          {props.items.map((item, index) => {\n            return (\n              <li\n                key={index}\n                onClick={() => {\n                  props.removeResultHandler(index);\n                }}\n              >\n                {item}\n              </li>\n            );\n          })}\n        </ul>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {result}\n      {props.children}\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    removeResultHandler: (index) => {\n      dispatch(resultAction.removeResultAsync(index));\n    },\n  };\n};\n\nexport default React.memo(Result);\n"]},"metadata":{},"sourceType":"module"}