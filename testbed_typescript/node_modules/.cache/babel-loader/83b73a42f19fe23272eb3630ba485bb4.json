{"ast":null,"code":"var _jsxFileName = \"/Users/rickyjhc/Desktop/testbed/testbed_react/testbed_typescript/src/components/List/List.tsx\",\n    _s = $RefreshSig$();\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useState, useRef } from \"react\";\nimport classes from \"./List.module.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Container, Row, Col, Card, Form, Alert, Button } from \"react-bootstrap\";\nimport { itemAction } from \"../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = props => {\n  _s();\n\n  // react-redux\n  const lists = useSelector(state => state.item.lists);\n  const dispatch = useDispatch(); // useState\n\n  const [btnDisabledState, setBtnDisabledState] = useState(true); // useRef\n\n  const itemTextEl = useRef(null); // handler\n\n  const bottunSubmitHandler = e => {\n    e.preventDefault();\n    const item = {\n      id: uuidv4(),\n      text: itemTextEl.current.value\n    };\n    dispatch(itemAction.addList(item));\n    itemTextEl.current.value = \"\";\n  };\n\n  const inputChangedHandler = e => {\n    if (e.target.value.length > 0) {\n      setBtnState(false);\n    }\n  };\n\n  const addFavoriteHandler = id => {\n    const index = lists.findIndex(item => item.id === id);\n\n    if (index !== -1) {\n      const item = lists[index];\n      dispatch(itemAction.removeList(item));\n      dispatch(itemAction.addFavorite(item));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.List,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"pt-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: bottunSubmitHandler,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"ItemText\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"input\",\n                    placeholder: \"Enter the item's text\",\n                    ref: itemTextEl,\n                    onChange: inputChangedHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  block: true,\n                  disabled: btnDisabledState,\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [lists.map(item => {\n                return /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"success\",\n                  onClick: () => addFavoriteHandler(item.id),\n                  children: item.text\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this);\n              }), props.children]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"H2dYBsuSz3QBAF5o8xFQZj17IPA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/rickyjhc/Desktop/testbed/testbed_react/testbed_typescript/src/components/List/List.tsx"],"names":["v4","uuidv4","React","useState","useRef","classes","useSelector","useDispatch","Container","Row","Col","Card","Form","Alert","Button","itemAction","List","props","lists","state","item","dispatch","btnDisabledState","setBtnDisabledState","itemTextEl","bottunSubmitHandler","e","preventDefault","id","text","current","value","addList","inputChangedHandler","target","length","setBtnState","addFavoriteHandler","index","findIndex","removeList","addFavorite","map","children"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport React, { useState, useRef } from \"react\";\nimport classes from \"./List.module.scss\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Form,\n  Alert,\n  Button,\n} from \"react-bootstrap\";\n\nimport { itemAction } from \"../../store/actions\";\n\ninterface TItem {\n  id: string;\n  text: string;\n}\n\ninterface TProps {\n  items: TItem[];\n}\n\ninterface TStateItem {\n  item: {\n    lists: TItem[];\n    favorites: TItem[];\n  };\n}\n\ninterface TAction {\n  type: string;\n  item: TItem;\n}\n\nconst List: React.FC<TProps> = (props) => {\n  // react-redux\n  const lists = useSelector<TStateItem>((state) => state.item.lists) as TItem[];\n  const dispatch = useDispatch<React.Dispatch<TAction>>();\n\n  // useState\n  const [btnDisabledState, setBtnDisabledState] = useState<boolean>(true);\n\n  // useRef\n  const itemTextEl = useRef<HTMLInputElement>(null);\n\n  // handler\n  const bottunSubmitHandler = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const item = {\n      id: uuidv4(),\n      text: itemTextEl.current!.value,\n    };\n\n    dispatch(itemAction.addList(item));\n\n    itemTextEl.current!.value = \"\";\n  };\n\n  const inputChangedHandler = (e: React.FormEvent) => {\n    if ((e.target as HTMLInputElement).value.length > 0) {\n      setBtnState(false);\n    }\n  };\n\n  const addFavoriteHandler = (id: string) => {\n    const index = lists.findIndex((item) => item.id === id);\n    if (index !== -1) {\n      const item = lists[index];\n\n      dispatch(itemAction.removeList(item));\n      dispatch(itemAction.addFavorite(item));\n    }\n  };\n\n  return (\n    <div className={classes.List}>\n      <Container className=\"pt-5\">\n        <Row>\n          <Col>\n            <Card>\n              <Card.Body>\n                <Form onSubmit={bottunSubmitHandler}>\n                  <Form.Group controlId=\"ItemText\">\n                    <Form.Control\n                      type=\"input\"\n                      placeholder=\"Enter the item's text\"\n                      ref={itemTextEl}\n                      onChange={inputChangedHandler}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                    block\n                    disabled={btnDisabledState}\n                  >\n                    Submit\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n\n            <Card className=\"mt-3\">\n              <Card.Body>\n                {lists.map((item) => {\n                  return (\n                    <Alert\n                      key={item.id}\n                      variant=\"success\"\n                      onClick={() => addFavoriteHandler(item.id)}\n                    >\n                      {item.text}\n                    </Alert>\n                  );\n                })}\n                {props.children}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}